openops:

  nameOverride: ""
  fullnameOverride: ""

  imagePullSecrets: []


  ingress:
    url: openops.vicrem.se
    controller:
      traefik:
        enabled: true
        entrypoints:
        - web
        - websecure
      istio:
        enabled: false
        gateway: istio-gateway
      nginx:
        enabled: false
    tls:
      enabled: true
      secret:



  secrets:
    admin_username: admin@vicrem.se
    admin_password: test1234
    superuser_password: test1234



  ##
  ## PostgreSQL Provider
  ## Deploy subchart or provide the external address for postgres.
  storage:
    postgres:
      deploy: true
      address: ""
      port: 5432
      username: &user postgres
      password: test1234


  ##
  ## Redis Provider
  ## Deploy subchart or provide the external address for redis.
  session:
    redis:
      deploy: true
      address: ""
      port: 6379
      database: 0
      password: test1234


  ##
  ## Table Service
  tables:
    image: public.ecr.aws/openops/openops-tables
    tag: 0.1.8
    imagePullPolicy: Always
    replicas: 1
    resources: {}
    persistence:
      mountPath: ""
      existingClaim: ""
    environment:
      MIGRATE_ON_STARTUP: 'true'
      DISABLE_VOLUME_CHECK: 'yes'
      SYNC_TEMPLATES_ON_STARTUP: 'false'
      BASEROW_EXTRA_ALLOWED_HOSTS: '*'
      BASEROW_REFRESH_TOKEN_LIFETIME_HOURS: '168'
      BASEROW_ACCESS_TOKEN_LIFETIME_MINUTES: '60'


  ##
  ## Analytics Service
  analytics:
    image: public.ecr.aws/openops/openops-analytics
    tag: 0.12.16
    imagePullPolicy: Always
    replicas: 1
    resources: {}
    persistence:
      mountPath: ""
      existingClaim: ""
    environment:
      GUNICORN_LOGLEVEL: debug
      SUPERSET_FEATURE_ALLOW_ADHOC_SUBQUERY: 'true'


  ##
  ## App Service
  app:
    image: public.ecr.aws/openops/openops-app
    tag: 0.2.2
    imagePullPolicy: Always
    replicas: 1
    resources: {}
    persistence:
      mountPath: ""
      existingClaim: ""
    environment:
      OPS_COMPONENT: app
      OPS_BLOCKS_SOURCE: FILE
      OPS_BLOCKS_SYNC_MODE: NONE
      OPS_WEBHOOK_TIMEOUT_SECONDS: '30'
      OPS_TRIGGER_DEFAULT_POLL_INTERVAL: '1'
      OPS_LOG_LEVEL: info
      OPS_LOGZIO_TOKEN: ''
      OPS_LOG_PRETTY: 'false'
      OPS_LOGZIO_METRICS_TOKEN: ''
      OPS_TELEMETRY_COLLECTOR_URL: https://telemetry.openops.com/save


  ##
  ## Engine Service
  engine:
    image: public.ecr.aws/openops/openops-engine
    tag: 0.2.2
    imagePullPolicy: Always
    replicas: 1
    resources: {}
    persistence:
      mountPath: ""
      existingClaim: ""
    environment:
      OPS_COMPONENT: engine
      OPS_BASE_CODE_DIRECTORY: /tmp/codes
      OPS_EXECUTION_MODE: SANDBOX_CODE_ONLY


  ##
  ## Init Container
  initContainer:
    image: curlimages/curl
    tag: 8.12.1
    imagePullPolicy: Always


  ##
  ## ServiceAccount
  serviceAccount:
    create: true
    automount: false
    annotations: {}
    name: ""


  ##
  ## livenessProbe/readinessProbe
  livenessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5


  nodeSelector: {}
  tolerations: []
  affinity: {}





##
## Configure postgresql database subchart under this key.
## This will be deployed when storage.postgres.deploy is set to true
## For more options see https://github.com/bitnami/charts/tree/master/bitnami/postgresql
postgresql:
  tls:
    enabled: true
    autoGenerated: true
  auth:
    username: *user
    existingSecret: database-creds
    secretKeys:
      adminPasswordKey: database_password
  primary:
    extendedConfiguration: |
      max_connections=300
    persistence:
      enabled: false
      existingClaim: ""
      storageClass: ""
      size: 8Gi
    resources: {}
    initdb:
      scripts:
        init-db.sql: |
          CREATE DATABASE tables;
          CREATE DATABASE analytics;


##
## Configure redis database subchart under this key.
## This will be deployed when redis.deploy is set to true
## For more options see https://github.com/bitnami/charts/tree/main/bitnami/redis
redis:
  architecture: standalone
  auth:
    enabled: true
    usePasswordFiles: false
    usePasswordFileFromSecret: false
    existingSecret: redis-creds
    existingSecretPasswordKey: redis_password
  master:
    persistence:
      enabled: false
      existingClaim: ""
      storageClass: ""
      accessModes:
      - ReadWriteOnce
      size: 1Gi
    resources: {}
